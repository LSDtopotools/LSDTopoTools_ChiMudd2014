=== All options used in the m/n analyses

This is a complete list of the options that are used in the stem:[m/n] analysis. Note that many other options are possible for printing, basin selection and output data formats. You will find all possible options in the section: <<Parameter file options>>. What is reported below is just repeated from that section.

==== Parameters for exploring the _m/n_ ratio with chi analysis

[cols="1,1,1,2", options="header"]
.Parameters for trying to constrain the _m/n_ ratio using chi analysis
|===
|Keyword
|Input type
|Default value
|Description


|start_movern
|float
|0.1
|In several of the _m/n_ testing functions, the program starts at this _m/n_ value and then iterates through a number of increasing _m/n_ values, calculating the goodness of fit to each one.

|delta_movern
|float
|0.1
|In several of the _m/n_ testing functions, the program increments _m/n_ by this value.

|n_movern
|int
|8
|In several of the _m/n_ testing functions, the program increments _m/n_ this number of times. 

|only_use_mainstem_as_reference
|bool
|true
|If true this compares the goodness of fit between the mainstem and all tributaries in each basin for each _m/n_ value. If false, it compares *all* tributaries and the main stem to every other tributary.  


|calculate_MLE_collinearity
|bool
|false
|If true loops though every _m/n_ value and calculates the goodness of fit between tributaries and the main stem. It reports back both MLE and RMSE values. Used to determine _m/n_ ratios. This uses *ALL* nodes in the channel network. The effect is that longer channels have greater influence of the result than small channels. 

|calculate_MLE_collinearity_with_points
|bool
|false
|If true loops though every _m/n_ value and calculates the goodness of fit between tributaries and the main stem. It reports back both MLE and RMSE values. Used to determine _m/n_ ratios. It uses specific points on tributaries to compare the mainstem. These are located at fixed chi distances upstream of the lower junction of the tributary. The effect is to ensure that all tributaries are weighted similarly in calculating _m/n_.

|calculate_MLE_collinearity_with_points_MC
|bool
|false
|If true loops though every _m/n_ value and calculates the goodness of fit between tributaries and the main stem. It reports back both MLE and RMSE values. Used to determine _m/n_ ratios. It uses specific points on tributaries to compare the mainstem. The location of these points is selected at random and this process is reapeated a number of times (the default is 1000) to quantify uncertanty in the best fit _m/n_ ration. 

|collinearity_MLE_sigma
|float
|1000
|A value that scales MLE. It does not affect which _m/n_ value is the most likely. However it affects the absolute value of MLE. If it is set too low, MLE values for poorly fit segments will be zero. We have performed sensitivity and found that once all channels have nonzero MLE values the most likely channel does not change. So this should be set high enough to ensure there are nonzero MLE values for all tributaries. Set this too high, however, and all MLE values will be very close to 1 so plotting becomes difficult as the difference between MLE are at many significant digits (e.g., 0.9999997 vs 0.9999996). We have found that a value of 1000 works in most situations. 

|MC_point_fractions
|int
|5
|For the `calculate_MLE_collinearity_with_points_MC` analysis, this is the number of points on each tributary to test against the main stem channel.

|MC_point_iterations
|int
|1000
|For the `calculate_MLE_collinearity_with_points_MC` analysis, this is the number iterations of drawing random points with which to build best fit _m/n_ statistics.

|max_MC_point_fraction
|float
|0.5
|The maximum fraction of the length, in chi, of the main stem that points will be measured over the tributary. For example, if the main stem has a chi length of 2 metres, then points on tributaries up to 1 metres from the confluence with the main stem will be tested by the `calculate_MLE_collinearity_with_points_MC` routine.  


|movern_residuals_test
|bool
|false
|If true loops though every _m/n_ value and calculates the mean residual between the main stem and all the tributary nodes. It is used to search for the _m/n_ value where the residual switches from negative to positive. The rationale is that the correct _m/n_ might be reflected where the mean residual is closest to zero.   

|print_profiles_fxn_movern_csv
|bool
|false
|If true this loops though every _m/n_ value and prints (to a single csv file) all the chi-elevation profiles. Used to visualise the effect of changing the _m/n_ ratio on the profiles.


|MCMC_movern_analysis
|bool
|false
|If true, runs a Monte Carlo Markov Chain analysis of the best fit _m/n_. First attempts to tune the sigma value for the profiles to get an MCMC acceptance rate of 25%, then runs a chain to constrain uncertainties. At the moment the tuning doesn't seem to be working properly!! This is also extremely computationally expensive, for a, say, 10Mb DEM analysis might last several days on a single CPU core. If you want uncertainty values for the _m/n_ ratio you should use the `calculate_MLE_collinearity_with_points_MC` routine. 

|MCMC_chain_links
|int
|5000
|Number of links in the MCMC chain

|MCMC_movern_minimum
|float
|0.05
|Minimum value of the _m/n_ ratio tested by the MCMC routine. 

|MCMC_movern_maximum
|float
|1.5
|Maximum value of the _m/n_ ratio tested by the MCMC routine. 

|===

==== Parameters for exploring the _m/n_ ratio with slope-area analysis

[cols="1,1,1,2", options="header"]
.Parameters for exploring the _m/n_ ratio with slope-area analysis
|===
|Keyword
|Input type
|Default value
|Description


|SA_vertical_interval
|float
|20
|This parameter is used for slope-area analysis. Each channel is traced downslope. A slope (or gradient) is calculated by dividing the fall in the channel elevation over the flow distance; the program aims to calculate the slope at as near to a fixed vertical interval as possible following advice of Wobus et al 2006.

|log_A_bin_width
|float
|0.1
|This is for slope-area analysis. The raw slope-area data is always a horrendous mess. To get something that is remotely sensible you must bin the data. We bin the data in bins of the logarithm of the Area in metres^2^. This is the log bin width.

|print_slope_area_data
|bool
|false
|This prints the slope-area analysis to a csv file. It includes the raw data and binned data. It is organised by both source and basin so you analyise different channels. See the section on outputs for full details. 

|segment_slope_area_data
|bool
|false
|If true, uses the segmentation algorithm in http://onlinelibrary.wiley.com/doi/10.1002/2013JF002981/abstract[Mudd et al., JGR-ES 2014] to segment the log-binned S-A data for the main stem channel.  

|slope_area_minimum_segment_length
|int
|3
|Sets the minimum segment length of a fitted segment to the S-A data. 

|bootstrap_SA_data
|bool
|false
|This bootstraps S-A data by removing a fraction of the data (set below) in each iteration and calculating the regression coefficients. It is used to estimate uncertainty, but it doesn't really work since uncertainty in regression coefficients reduces with more samples and S-A datasets have thousands of samples. Left here as a kind of monument to our futile efforts. 


|N_SA_bootstrap_iterations
|int
|1000
|Number of boostrapping iterations

|SA_bootstrap_retain_node_prbability
|float
|0.5
|Fraction of the data retained in each bootstrapping iteration.

|===



