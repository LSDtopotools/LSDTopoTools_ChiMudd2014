=== Output data formats

Data is written to rasters, csv files, or geojson file. 

* The rasters are all in ENVI `bil` format, which you can read about in the section: <<Preparing your data>>. 
+
IMPORTANT: ENVI bil should not be mistaken for ESRI bil. Make sure you are using ENVI bil format. 
+
* The **csv** files are comma separated value files which can be read by spreadsheets and GIS software. 
** If you import csv files into a GIS you need to tell the GIS about the coordinate system.  
** Our csv files all have labeled columns so their contents can be easily views. 
** Almost all of our csv files contain **latitude** and **longitude** columns. These columns are projected into the **WGS84** coordinate system for ease of plotting in GIS software. Select this coordinate system when you loa the csv file into your GIS. For reference it has the http://spatialreference.org/ref/epsg/wgs-84/[EPSG code 4326]. 
+
* It is very annoying to have to click buttons in a GIS to select a coordinate system each time you look at csv data, so we also allow you to convert to http://geojson.org/[geojson] format by using the flag `convert_csv_to_geojson` in the parameter file. 
** The advantage of these files is that they have georeferencing, so you can load them directly into a GIS or web mapping software. 
** The disadvantage is that they are *HUGE* compared to csv files (usually more than 10x the file size). If you are working within GIS software or using web mapping (e.g., https://d3js.org/[d3.js] or http://leafletjs.com/[leaflet]) you will probably want to generate these files but if you are using our python plotting tools you can probably forgo creating them.

=== The different outputs and how to get them

To get the various outputs, you need to tell the *chi mapping tool* using the parameter file. These tables tell you what flags to use and what data you will get. 

==== Raster output

[cols="1,1,2", options="header"]
.These are basic rasters that don't require chi analysis.
|===

|parameter file switch
|Filename contains
|Description

|write hillshade: true
|*_hs.bil*
|This prints a hillshade raster. Seems to give better results than hillshade functions in GIS software. Also much faster. Much of our plotting tools make nice looking maps when you drape hillshade over elevation data so we suggest you turn this on the first time you analyse a landscape. 

|print_fill_raster: true
|*_fill.bil*
|This prints the fill raster. Filling is computationally expensive so you can do this the first time you run a DEM and then use the `raster_is_filled` flag later to speed up computation. 

|print_DrainageArea_raster: true
|*_DArea.bil*
|This prints the drainage area raster. Drainage area is calculated using the http://www.sciencedirect.com/science/article/pii/S0169555X12004618[Fastscape] D8 flow routing algorithm. 

|print_basin_raster: true
|*_AllBasins.bil*
|This prints a basin raster. Each basin gets an integer value that is keyed to the baselevel. These correspond to the `baselevel_key` that appears in csv data files. 

|print_chi_coordinate_raster: true
|*_chi_coord.bil* or *_chi_coordQ.bil*
|This prints the chi coordinate. It uses the _A~0~_ and _m/n_ values set by the `A_0` and `m_over_n` flags in the parameter file (defaults are 1 m^2^ and 0.5, respectively). The raster will calculated chi using drainage area, which results in the *_chi_coord.bil* file, unless the switch `use_precipitation_raster_for_chi` is set to true, in which case a discharge will be calculated from a precipitation raster and this discharge will be used to calculate chi, resulting in a *_chi_coordQ.bil* file. 

|print_discharge_raster: true
|*_Q.bil*
|If `use_precipitation_raster_for_chi` is set to true, the discharge will be calculated and printed to a raster. Note that there is no real hydrology in this calculation: one should think of it as a number representing the relative supply of water along the channel network. "Discharge" is calculated simply by accumulating the volume of precipitation from each pixel, so precipitation is supplied in m/yr and "discharge" is in m^3^/yr.  

|print_chi_no_discharge: true
|*_chi_coord.bil* 
|Used only if you have set `use_precipitation_raster_for_chi` and `print_chi_coordinate_raster` to true, and you want a chi coordinate raster that is based on drainage area in addition to one based on discharge. Used for comparison purposes, so you can see how big of a change spatially heterogeneous precipitation causes to the chi coordinate.

|print_litho_info: true

*Follow intructions on <<Integrating lithologic information>>*
|*_LITHRAST.bil* 
|Automated generation of a clipped lithologic raster to simplify plotting routines. 

|===

==== Point data (usually output as csv)

The table below gives a brief description of the output files. After the table we show the format for each of these files. 

NOTE: If the `convert_csv_to_geojson` flag is set to `true` then the csv data headers will be recast as geojson point attributes. 
[cols="1,1,2", options="header"]
.Point data available in csv or geojson format. Switch to true to turn on. 
|===
|parameter file switch, and the filename will contain
|Description
|Data columns

|print_channels_to_csv

*_CN.csv*
|Prints the channel network to csv.  
|_latitude,longitude,Junction Index,Stream Order,NI_ 

_NI_ is the node index (an index into individual pixels in the DEM), and _Junction Index_ is an index into the `LSDJunctionNetwork` object. Latitude and longitude are in http://spatialreference.org/ref/epsg/wgs-84/[WGS84].

|print_junctions_to_csv

*_JN.csv*
|Prints junction numbers to csv. 
|_junction,node,x,y,latitude,longitude,stream_order_ 

_junction_ is the junction index. Latitude and longitude are in http://spatialreference.org/ref/epsg/wgs-84/[WGS84], whereas _x_ and _y_ are in the local UTM coordinates.    

|print_sources_to_csv

*_ATsources.csv*
|Prints the sources to csv. 
|_node,x,y,latitude,longitude_ 

_node_ is the node index from `LSDFlowInfo`. Latitude and longitude are in WGS84, whereas _x_ and _y_ are in the local UTM coordinates.    

|print_simple_chi_map_to_csv

*_chi_coord.csv*
|Prints a very basic chi map. 
|_latitude,longitude,chi_ 

Latitude and longitude are in http://spatialreference.org/ref/epsg/wgs-84/[WGS84], chi is in metres.    

|print_simple_chi_map_with_basins_to_csv

*_chi_coord_basins.csv*
|Prints a very basic chi map, but includes the basin. 
|_latitude,longitude,chi,basin_junction_ 

Latitude and longitude are in http://spatialreference.org/ref/epsg/wgs-84/[WGS84], chi is in metres. The _basin_junction_ refers to the junction number of the baselevel junction for each node. Allows one to plot these profiles by basin. 

|print_basic_M_chi_map_to_csv

*_MChiBasic.csv*
|This is a very rudimentary version of a map of chi slope (if _A~0~_ = 1, then this is the same as the channel steepness index). No segmentation is performed, it simply calculates chi slope from smoothed profiles. 
|_latitude,longitude,chi,elevation,flow distance,drainage area,m_chi,b_chi,source_key,basin_key_ 

Latitude and longitude are in http://spatialreference.org/ref/epsg/wgs-84/[WGS84], chi and flow distance are in metres. Drainage area is in m^2^. _M_chi_ is the slope in chi space, equivalent to _k~sn~_ if _A~0~_ is set to 1. _b_chi_ is the intercept of the chi segment. The _source_key_ and _basin_key_ are indices into the basins and sources.

|print_segmented_M_chi_map_to_csv

*_MChiSegmented.csv*
|This uses segmentation to calculate chi slopes (if _A~0~_ = 1, then this is the same as the channel steepness index) following the http://onlinelibrary.wiley.com/doi/10.1002/2013JF002981/full[Mudd et al, 2014] algorithms.
|_latitude,longitude,chi,elevation,flow distance,drainage area,m_chi,b_chi,source_key,basin_key_ 

Latitude and longitude are in http://spatialreference.org/ref/epsg/wgs-84/[WGS84], chi and flow distance are in metres. Drainage area is in m^2^. _M_chi_ is the slope in chi space, equivalent to _k~sn~_ if _A~0~_ is set to 1. _b_chi_ is the intercept of the chi segment. The _source_key_ and _basin_key_ are indices into the basins and sources.

|print_segments

*_MChiSegmented.csv*
|This uses segmentation to calculate chi slopes (if _A~0~_ = 1, then this is the same as the channel steepness index) following the http://onlinelibrary.wiley.com/doi/10.1002/2013JF002981/full[Mudd et al, 2014] algorithms. It includes the segment data including a segment number and the fitted segment elevation
|_latitude,longitude,chi,elevation,flow distance,drainage area,m_chi,b_chi,source_key,basin_key,segmented_elevation,segment_number_ 

Latitude and longitude are in http://spatialreference.org/ref/epsg/wgs-84/[WGS84], chi and flow distance are in metres. Drainage area is in m^2^. _M_chi_ is the slope in chi space, equivalent to _k~sn~_ if _A~0~_ is set to 1. _b_chi_ is the intercept of the chi segment. The _source_key_ and _basin_key_ are indices into the basins and sources. The _segmented_elevation_ is the elevation of the segment, and the _segment_number_ is an increasing integer for each segment. The segment number is used to search for knickpoints if `skip` is set to 0 and `n_iterations` is set to 1. 

|check_chi_maps

*_checkchi.csv* and *_checkchiQ.csv*
|This is used with the discharge-based chi calculation to compare chi values using discharge (`_checkchiQ.csv`) vs drainage area (`_checkchi.csv`).
|_latitude,longitude,chi,elevation,flow distance,drainage area,source_key,basin_key_

Latitude and longitude are in http://spatialreference.org/ref/epsg/wgs-84/[WGS84], chi and flow distance are in metres. Drainage area is in m^2^. The _source_key_ and _basin_key_ are indices into the basins and sources.

|print_source_keys

*_SourceKeys.csv*
|This prints information about source keys for each node in the channel network. Allows visualisation tools to link nodes to their sources, and thus used to plot tributaries. 
|_latitude,longitude,source_node,source_key_

Latitude and longitude are in http://spatialreference.org/ref/epsg/wgs-84/[WGS84]. The _source_node_ is the node id of the source from the `LSDFlowInfo` object and the _source_key_ is a key of the source (used so that sources are numbered 0,1,2,3, etc. instead of some random large integer).

|print_baselevel_keys

*_BaselevelKeys.csv*
|This prints information about baselevel keys for each node in the channel network. Allows visualisation tools to link nodes to their baselevel, and thus used to plot basins.
|_latitude,longitude,baselevel_node,baselevel_junction,baselevel_key_

Latitude and longitude are in http://spatialreference.org/ref/epsg/wgs-84/[WGS84]. The _baselevel_node_ is the node id of the source from the `LSDFlowInfo` object. The _baselevel_junction_ is the junction index from the `LSDJunctionIndex` object, and the _baselelvel_key_ is a key of the baselevel (used so that basins are numbered 0,1,2,3, etc. instead of some random large integer).

|print_profiles_fxn_movern_csv

*_movernQ.csv* or *_movern.csv*
|Loops through _m/n_ values and records the chi coordinate for all the channels for each _m/n_. If `use_precipitation_raster_for_chi` is true then this prints a *_movernQ.csv*, and prints *_movern.csv* otherwise. 
|_source_key,basin_key,elevation,m_over_n = 0.2, m_over_n = 0.3, etc._

The _source_key_ and _basin_key_ are indices into the basins and sources. _elevation_ is the, wait for it, elevation. Following this there are columns of the chi coordinate for each _m/n_ value, which are determined by the parameters `n_movern`, `start_movern`, and `delta_movern`.

|calculate_MLE_collinearity

*_movernstats* or *_movernstatsQ* with *_basinstats.csv*
|Loops through _m/n_ values and records  the goodness of fit between tributaries and main stem for all the channels for each _m/n_. If `use_precipitation_raster_for_chi` is true then this prints *_movernstatsQ_* files, and prints *_movernstats_* otherwise. Generates a large number 
|_basin_key,m_over_n = 0.2, m_over_n = 0.3, etc._

The  _basin_key_ is and index into the basins and sources. _elevation_ is the, wait for it, elevation. Following this there are columns of the maximum likelihood estimator (MLE) for each basin for each _m/n_ value, which are determined by the parameters `n_movern`, `start_movern`, and `delta_movern`. The higher the MLE, the better the fit. Calculated by projecting each tributary data point onto a linear fit between adjacent nodes in chi-elevation space of the main stem channel. 

|calculate_MLE_collinearity

*_movernstats* or *_movernstatsQ* with *_X_fullstats.csv* where *X* is _m/n_
|Loops through _m/n_ values and records  the goodness of fit between tributaries and main stem for all the channels for each _m/n_. These are separate files for each _m/n_ value (denoted in the filename). If `use_precipitation_raster_for_chi` is true then this prints *_movernstatsQ_* files, and prints *_movernstats_* otherwise. Generates a large number of files. 
|_reference_source_key,test_source_key,MLE,RMSE_

The _reference_source_key_ is key of the channel that serves as a reference, against which goodness of fit will be measured. The _test_source_key_ is the source key of the tributary which is being compared to the reference channel. The _MLE_ is the maximum likelihood estimator, where better goodness of fit results in higher numbers, and the _RMSE_ is the root mean square error, where smaller numbers indicate a better fit. 


|===
