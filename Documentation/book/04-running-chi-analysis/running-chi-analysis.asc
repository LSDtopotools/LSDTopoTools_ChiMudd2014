== Running the chi analysis: options and outputs

*This section is technical and not based on tutorials!* It explains the various options and data outputs of the *chi mapping tool*. 

If you want specific examples of usage you may wish to skip to theses sections

* <<Examples of chi analysis>>
* <<Calculating concavity>>

.Important notes on how vagrant and LSDTopoTools work
***********************************************************
Most users will be running *LSDTopoTools* using https://www.vagrantup.com/[vagrant]. See the section <<Getting the software>> for details. 
These are basic notes on running *LSDTopoTools* on a vagrant server.

* The clever thing about vagrant is that you can run analyses on a Linux machine running inside you host computer (usually Windows or MacOS) but you host computer can see the files.
* *All of our programs are run within the linux server. All data files must be visible to the linux server!*
** Even though your files are the same files on the host and guest operating system, they have a different address. That is, the same file will have a Linux address and an address in your host operating system (e.g., Windows). In Linux the files are in `/LSDTopoTools/`. In you host operating system they are in the `LSDTopoTools` directory within your `VagrantBoxes` directory. You will need to remember where you but the `VagrantBoxes` directory! 
* In these instructions whenever you see the `$` prompt it means you are using the guest linux machine, which you have logged into using `putty.exe` or `ssh`, and not your host machine. 

***********************************************************

The chi analysis, and a host of other analyses, are run using the *chi_mapping_tool.exe* program. If you followed the instructions in the section <<Getting the software>> you will already have this program compiled. 

The program *chi_mapping_tool.exe* runs with two inputs when you call the program:

1. The path to the parameter file. This **MUST** include the trailing slash (i.e., `/LSDTopoTools/Topographic_projects/Test_data` is incorrect whereas `/LSDTopoTools/Topographic_projects/Test_data/` is correct).
2. The name of the parameter file.

So if the parameter file is located at `/LSDTopoTools/Topographic_projects/Test_data` and it is called `test_chi_map.param`, you run the program with:

[source,console]
-----
$ ./chi_mapping_tool.exe /LSDTopoTools/Topographic_projects/Test_data test_chi_map.param 
-----

As we will see momentarily, the data and the parameter file can be in different locations, although in general it might be sensible to place the parameter file in the sample directory as the data.

The code is run using a parameter file, within which users can set the data they want to print to file. Regardless of which data they choose to print to file, a file will be printed with the extension `_Input.param` which prints out all the parameters used in the analysis (including the default parameters). This file can be used to verify if the correct parameters have been used in the analysis. 

=== Text editors for modifying files

You will need to modify the parameter file in a text editor. You might also modify python scripts in a text editor. So you need to get a text editor. We use http://brackets.io/[Brackets] and https://atom.io/[Atom] (these are platform independent). Sometimes we also use http://www.pspad.com/en/[PSPad]. 

include::sections/the-parameter-file.asc[]

include::sections/output-data.asc[]