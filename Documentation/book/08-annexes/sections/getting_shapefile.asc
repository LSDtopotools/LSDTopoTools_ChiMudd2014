=== A: Getting your lithologic data ready

Lithologic datasets need to be formatted to be understable by LSDTopoTools. LSDTopoTools can indeed only ingest rasters for the moment, and thus numerical data rather than letters and words. Most of the time your geological will be in a shapefile format that need to be then rasterize. Basically, the analysis just need a raster with areas containing different numerical values and a csv file containing the signification of these. The code will then format the raster with the right extent to `_LITHRAST.bil`. Your lithokey file needs to have a name finishing with `_lithokey.csv` and needs to have the following headers: `ID`, containing the data string, and `rocktype`, containing the corresponding value in the raster. For instance:
```
_beverley_lithokeys.csv_
ID,rocktype
sandstone,4
granite,2
basalt,1
```

WARNING: Generating these files can be made manually or with any major GIS, but formatting errors can easily be made. We propose there a method to generate automatically all these file with the right format from a shapefile containing the geological information. You will need Python to use the generating script, you can refer to the <<Using python>> section for instruction about installation.

The Python script that automate this process is present in the LSDMappingTools plotting library developped in parallel of LSDTopoTools. You can refer to the section <<Getting our plotting tools>> to download the needed repository. The script we are going to use is called `Rasterization.py` and can be executed without modifying the code, only using the command line.

The first step is to open a terminal and to navigate with `cd` until your LSDMappingTools folder.
You can then obtain the documentation of this script by running the command `python Rasterization.py -h` displaying the following results:

```
-h, --help            show this help message and exit
  -dir DIRECTORY, --directory DIRECTORY
                        The base directory with the shapefile. If this isn't
                        defined I'll assume it's the same as the current
                        directory.
  -fn FNAME_PREFIX, --fname_prefix FNAME_PREFIX
                        The name of your shapefile without extention (no .shp
                        at the end)
  -fd FIELD_NAME, --field_name FIELD_NAME
                        The name of the field that will give the value to the
                        raster 
  -rast RASTERIZATION, --rasterization RASTERIZATION
                        Rasterize your file into a tif raster and produce a
                        lithokey csv file containing the keys for the
                        numerisation of the data.
  -rn RENAME, --rename RENAME
                        rename your raster after rasterization, optional.
  -UTM UTM_CODE, --UTM_CODE UTM_CODE
                        Give the UTM UTM_CODE of your zone to automate the
                        conversion of the raster into an LSDTopoTools
                        compatible raster.
  -S SOUTH, --SOUTH SOUTH
                        Turn to True if your UTM zone is in the southern
                        hemisphere. A quick way to check that is to go on
                        field and to observe how flow the water in a
  -res RESOLUTION, --resolution RESOLUTION
                        Precise this argument if you want to change the raster
                        resolution, default 30
```

The script need at least the following option to run: the directory where your shapefile is, the prefix of the shapefile and the name of the field containing the information you want to digitalise. You can launch the following command to produce a basic rasterization.
```
python Rasterization.py -dir /home/PhilCollins/DataStore/GIS/US/ -fn beverly_litho -fd geology
```

this would create a raster and a csv file. However, the output raster will be in WGS94 geographic system. You would need to translate it in UTM to make it usable by LSDTopoTools. You can either use _GDAL_, your favorite GIS or adding the following options to the python script: `-UTM`, followed byt the UTM zone of your area, with `-S True` if your area is in the southern hemisphere. Finaly, you can add at any point the `-res X` option to set a resolution different than 30 meters and `-rn X` if you want to specifiy a new name for the raster. A complete command would then be:

```
python Rasterization.py -dir /home/PhilCollins/DataStore/GIS/Africa/ -fn Tanzania_litho -fd LITH -UTM 33 -SOUTH True -rn GeoRast -res 12
```

Your raster is then ready to be ingested by LSDTopoTools.